// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())

  email String @db.VarChar(200) @unique
  nickname String @db.VarChar(100) @unique
  password String
  profileImage String?

  reviews Review[]
  comments Comment[]
}

model Book{
  isbn String @db.VarChar(100) @id
  title String @db.VarChar(100)
  publisher String @db.VarChar(100)
  image String @db.VarChar(300)
  description String @db.MediumText
  author String @db.VarChar(100)
  pubdate String @db.VarChar(100)
 
  reviews Review[]
}

model Review{
  id String @id @default(uuid())

  title String @db.VarChar(200)
  content String @db.LongText
  memory String @db.VarChar(1000)
  createdAt DateTime @default(now())
  image String @db.VarChar(300)

  isbn String
  book Book @relation(fields: [isbn], references: [isbn])
  userId String
  user User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  comments Comment[]
}

model Comment{
  id String @id @default(uuid())
  content String @db.VarChar(600)
  createdAt DateTime @default(now())

  parentCommentId String?
  parentComment Comment? @relation("parentComment", fields: [parentCommentId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  userId String
  user User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  reviewId String
  review Review @relation(fields: [reviewId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  childComments Comment[] @relation("parentComment")
}